/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContainerStatus {
    #[serde(rename = "created")]
    CONTAINER_STATUS_CREATED,
    #[serde(rename = "running")]
    CONTAINER_STATUS_RUNNING,
    #[serde(rename = "paused")]
    CONTAINER_STATUS_PAUSED,
    #[serde(rename = "restarting")]
    CONTAINER_STATUS_RESTARTING,
    #[serde(rename = "exited")]
    CONTAINER_STATUS_EXITED,
    #[serde(rename = "dead")]
    CONTAINER_STATUS_DEAD,
    #[serde(rename = "unknown")]
    CONTAINER_STATUS_UNKNOWN,
    #[serde(rename = "removing")]
    CONTAINER_STATUS_REMOVING,

}

impl std::fmt::Display for ContainerStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CONTAINER_STATUS_CREATED => write!(f, "created"),
            Self::CONTAINER_STATUS_RUNNING => write!(f, "running"),
            Self::CONTAINER_STATUS_PAUSED => write!(f, "paused"),
            Self::CONTAINER_STATUS_RESTARTING => write!(f, "restarting"),
            Self::CONTAINER_STATUS_EXITED => write!(f, "exited"),
            Self::CONTAINER_STATUS_DEAD => write!(f, "dead"),
            Self::CONTAINER_STATUS_UNKNOWN => write!(f, "unknown"),
            Self::CONTAINER_STATUS_REMOVING => write!(f, "removing"),
        }
    }
}

impl Default for ContainerStatus {
    fn default() -> ContainerStatus {
        Self::CONTAINER_STATUS_CREATED
    }
}

