/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Script {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "type")]
    pub r#type: models::ScriptType,
    #[serde(rename = "content")]
    pub content: String,
    #[serde(rename = "directory", deserialize_with = "Option::deserialize")]
    pub directory: Option<String>,
    #[serde(rename = "os_user_name", deserialize_with = "Option::deserialize")]
    pub os_user_name: Option<String>,
    #[serde(rename = "os_user_id", deserialize_with = "Option::deserialize")]
    pub os_user_id: Option<i32>,
    #[serde(rename = "os_group_name", deserialize_with = "Option::deserialize")]
    pub os_group_name: Option<String>,
    #[serde(rename = "os_group_id", deserialize_with = "Option::deserialize")]
    pub os_group_id: Option<i32>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "created_by", deserialize_with = "Option::deserialize")]
    pub created_by: Option<Box<models::User>>,
}

impl Script {
    pub fn new(object: Object, id: String, r#type: models::ScriptType, content: String, directory: Option<String>, os_user_name: Option<String>, os_user_id: Option<i32>, os_group_name: Option<String>, os_group_id: Option<i32>, created_at: String, created_by: Option<models::User>) -> Script {
        Script {
            object,
            id,
            r#type,
            content,
            directory,
            os_user_name,
            os_user_id,
            os_group_name,
            os_group_id,
            created_at,
            created_by: if let Some(x) = created_by {Some(Box::new(x))} else {None},
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "script")]
    Script,
}

impl Default for Object {
    fn default() -> Object {
        Self::Script
    }
}

