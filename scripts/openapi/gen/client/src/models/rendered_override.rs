/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RenderedOverride {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "override_id")]
    pub override_id: String,
    #[serde(rename = "rendered_key_value_pairs")]
    pub rendered_key_value_pairs: Vec<models::RenderedKeyValuePair>,
    #[serde(rename = "override")]
    pub r#override: Box<models::Override>,
}

impl RenderedOverride {
    pub fn new(object: Object, override_id: String, rendered_key_value_pairs: Vec<models::RenderedKeyValuePair>, r#override: models::Override) -> RenderedOverride {
        RenderedOverride {
            object,
            override_id,
            rendered_key_value_pairs,
            r#override: Box::new(r#override),
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "rendered_override")]
    RenderedOverride,
}

impl Default for Object {
    fn default() -> Object {
        Self::RenderedOverride
    }
}

