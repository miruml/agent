/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BaseJobRun {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "status")]
    pub status: models::JobRunStatus,
    #[serde(rename = "activity_status")]
    pub activity_status: models::JobRunActivityStatus,
    #[serde(rename = "error_status")]
    pub error_status: models::JobRunErrorStatus,
    #[serde(rename = "success")]
    pub success: bool,
    #[serde(rename = "failed")]
    pub failed: bool,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "completed_at", deserialize_with = "Option::deserialize")]
    pub completed_at: Option<String>,
}

impl BaseJobRun {
    pub fn new(object: Object, id: String, status: models::JobRunStatus, activity_status: models::JobRunActivityStatus, error_status: models::JobRunErrorStatus, success: bool, failed: bool, created_at: String, completed_at: Option<String>) -> BaseJobRun {
        BaseJobRun {
            object,
            id,
            status,
            activity_status,
            error_status,
            success,
            failed,
            created_at,
            completed_at,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "job_run")]
    JobRun,
}

impl Default for Object {
    fn default() -> Object {
        Self::JobRun
    }
}

