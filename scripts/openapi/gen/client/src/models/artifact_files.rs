/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ArtifactFiles {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "compose_file")]
    pub compose_file: String,
    #[serde(rename = "env_file", deserialize_with = "Option::deserialize")]
    pub env_file: Option<String>,
}

impl ArtifactFiles {
    pub fn new(object: Object, compose_file: String, env_file: Option<String>) -> ArtifactFiles {
        ArtifactFiles {
            object,
            compose_file,
            env_file,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "artifact_files")]
    ArtifactFiles,
}

impl Default for Object {
    fn default() -> Object {
        Self::ArtifactFiles
    }
}

