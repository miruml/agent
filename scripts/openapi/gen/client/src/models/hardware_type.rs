/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum HardwareType {
    #[serde(rename = "nvidia-jetson-orin-nano")]
    NvidiaJetsonOrinNano,
    #[serde(rename = "raspberry-pi")]
    RaspberryPi,
    #[serde(rename = "x86")]
    X86,

}

impl std::fmt::Display for HardwareType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::NvidiaJetsonOrinNano => write!(f, "nvidia-jetson-orin-nano"),
            Self::RaspberryPi => write!(f, "raspberry-pi"),
            Self::X86 => write!(f, "x86"),
        }
    }
}

impl Default for HardwareType {
    fn default() -> HardwareType {
        Self::NvidiaJetsonOrinNano
    }
}

