/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Device {
    #[serde(rename = "object")]
    pub object: Object,
    /// ID of the device
    #[serde(rename = "id")]
    pub id: String,
    /// Name of the device
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "status")]
    pub status: models::DeviceStatus,
    /// Timestamp of when the device was last synced
    #[serde(rename = "last_synced_at")]
    pub last_synced_at: String,
    /// Timestamp of the last successful connection event with the backend.
    #[serde(rename = "last_connected_at")]
    pub last_connected_at: String,
    /// Timestamp of the last successful disconnection event with the backend.
    #[serde(rename = "last_disconnected_at")]
    pub last_disconnected_at: String,
}

impl Device {
    pub fn new(
        object: Object,
        id: String,
        name: String,
        status: models::DeviceStatus,
        last_synced_at: String,
        last_connected_at: String,
        last_disconnected_at: String,
    ) -> Device {
        Device {
            object,
            id,
            name,
            status,
            last_synced_at,
            last_connected_at,
            last_disconnected_at,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "device")]
    Device,
}

impl Default for Object {
    fn default() -> Object {
        Self::Device
    }
}
