/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BaseConfigInstance {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "target_status")]
    pub target_status: models::ConfigInstanceTargetStatus,
    #[serde(rename = "status")]
    pub status: models::ConfigInstanceStatus,
    #[serde(rename = "filepath", deserialize_with = "Option::deserialize")]
    pub filepath: Option<String>,
    #[serde(rename = "patch_id", deserialize_with = "Option::deserialize")]
    pub patch_id: Option<String>,
    #[serde(rename = "created_by_id", deserialize_with = "Option::deserialize")]
    pub created_by_id: Option<String>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_by_id", deserialize_with = "Option::deserialize")]
    pub updated_by_id: Option<String>,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "device_id")]
    pub device_id: String,
    #[serde(rename = "config_schema_id")]
    pub config_schema_id: String,
    #[serde(rename = "instance", deserialize_with = "Option::deserialize")]
    pub instance: Option<serde_json::Value>,
}

impl BaseConfigInstance {
    pub fn new(
        object: Object,
        id: String,
        target_status: models::ConfigInstanceTargetStatus,
        status: models::ConfigInstanceStatus,
        filepath: Option<String>,
        patch_id: Option<String>,
        created_by_id: Option<String>,
        created_at: String,
        updated_by_id: Option<String>,
        updated_at: String,
        device_id: String,
        config_schema_id: String,
        instance: Option<serde_json::Value>,
    ) -> BaseConfigInstance {
        BaseConfigInstance {
            object,
            id,
            target_status,
            status,
            filepath,
            patch_id,
            created_by_id,
            created_at,
            updated_by_id,
            updated_at,
            device_id,
            config_schema_id,
            instance,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "config_instance")]
    ConfigInstance,
}

impl Default for Object {
    fn default() -> Object {
        Self::ConfigInstance
    }
}
