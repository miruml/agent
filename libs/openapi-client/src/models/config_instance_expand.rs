/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConfigInstanceExpand {
    #[serde(rename = "device")]
    CONFIG_INSTANCE_EXPAND_DEVICE,
    #[serde(rename = "config_schema")]
    CONFIG_INSTANCE_EXPAND_CONFIG_SCHEMA,
    #[serde(rename = "config_instance")]
    CONFIG_INSTANCE_EXPAND_CONFIG_INSTANCE,
}

impl std::fmt::Display for ConfigInstanceExpand {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CONFIG_INSTANCE_EXPAND_DEVICE => write!(f, "device"),
            Self::CONFIG_INSTANCE_EXPAND_CONFIG_SCHEMA => write!(f, "config_schema"),
            Self::CONFIG_INSTANCE_EXPAND_CONFIG_INSTANCE => write!(f, "config_instance"),
        }
    }
}

impl Default for ConfigInstanceExpand {
    fn default() -> ConfigInstanceExpand {
        Self::CONFIG_INSTANCE_EXPAND_DEVICE
    }
}
