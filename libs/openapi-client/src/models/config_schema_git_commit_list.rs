/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConfigSchemaGitCommitList {
    #[serde(rename = "object")]
    pub object: Object,
    /// The total number of items in the list. By default the total count is not returned. The total count must be expanded (using expand[]=total_count) to get the total number of items in the list.
    #[serde(rename = "total_count")]
    pub total_count: i64,
    /// The maximum number of items to return. A limit of 15 with an offset of 0 returns items 1-15.
    #[serde(rename = "limit")]
    pub limit: i32,
    /// The offset of the items to return. An offset of 10 with a limit of 10 returns items 11-20.
    #[serde(rename = "offset")]
    pub offset: i32,
    /// True if there are more items in the list to return. False if there are no more items to return.
    #[serde(rename = "has_more")]
    pub has_more: bool,
    #[serde(rename = "data")]
    pub data: Vec<models::ConfigSchemaGitCommit>,
}

impl ConfigSchemaGitCommitList {
    pub fn new(
        object: Object,
        total_count: i64,
        limit: i32,
        offset: i32,
        has_more: bool,
        data: Vec<models::ConfigSchemaGitCommit>,
    ) -> ConfigSchemaGitCommitList {
        ConfigSchemaGitCommitList {
            object,
            total_count,
            limit,
            offset,
            has_more,
            data,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "list")]
    List,
}

impl Default for Object {
    fn default() -> Object {
        Self::List
    }
}
