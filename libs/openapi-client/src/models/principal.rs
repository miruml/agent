/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Principal {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "type")]
    pub r#type: models::PrincipalType,
    #[serde(rename = "api_key", deserialize_with = "Option::deserialize")]
    pub api_key: Option<Box<models::ApiKey>>,
    #[serde(rename = "device", deserialize_with = "Option::deserialize")]
    pub device: Option<Box<models::Device>>,
    #[serde(rename = "user", deserialize_with = "Option::deserialize")]
    pub user: Option<Box<models::User>>,
}

impl Principal {
    pub fn new(
        object: Object,
        id: String,
        name: String,
        r#type: models::PrincipalType,
        api_key: Option<models::ApiKey>,
        device: Option<models::Device>,
        user: Option<models::User>,
    ) -> Principal {
        Principal {
            object,
            id,
            name,
            r#type,
            api_key: api_key.map(Box::new),
            device: device.map(Box::new),
            user: user.map(Box::new),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "principal")]
    Principal,
}

impl Default for Object {
    fn default() -> Object {
        Self::Principal
    }
}
