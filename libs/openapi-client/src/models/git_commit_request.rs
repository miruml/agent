/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GitCommitRequest {
    #[serde(rename = "commit_sha")]
    pub commit_sha: String,
    #[serde(rename = "commit_message")]
    pub commit_message: String,
    #[serde(rename = "branch")]
    pub branch: String,
    #[serde(rename = "origin")]
    pub origin: String,
    #[serde(rename = "config_schema_file_path")]
    pub config_schema_file_path: String,
}

impl GitCommitRequest {
    pub fn new(
        commit_sha: String,
        commit_message: String,
        branch: String,
        origin: String,
        config_schema_file_path: String,
    ) -> GitCommitRequest {
        GitCommitRequest {
            commit_sha,
            commit_message,
            branch,
            origin,
            config_schema_file_path,
        }
    }
}
