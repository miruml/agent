/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SyncDeviceResult : The result of attempting to sync the device.
/// The result of attempting to sync the device.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SyncDeviceResult {
    #[serde(rename = "success")]
    SYNC_DEVICE_RESULT_SUCCESS,
    #[serde(rename = "network_connection_error")]
    SYNC_DEVICE_RESULT_NETWORK_CONNECTION_ERROR,
    #[serde(rename = "in_cooldown")]
    SYNC_DEVICE_RESULT_IN_COOLDOWN,

}

impl std::fmt::Display for SyncDeviceResult {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::SYNC_DEVICE_RESULT_SUCCESS => write!(f, "success"),
            Self::SYNC_DEVICE_RESULT_NETWORK_CONNECTION_ERROR => write!(f, "network_connection_error"),
            Self::SYNC_DEVICE_RESULT_IN_COOLDOWN => write!(f, "in_cooldown"),
        }
    }
}

impl Default for SyncDeviceResult {
    fn default() -> SyncDeviceResult {
        Self::SYNC_DEVICE_RESULT_SUCCESS
    }
}

