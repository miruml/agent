/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GitRepositoryType {
    #[serde(rename = "github")]
    GIT_REPOSITORY_TYPE_GITHUB,
    #[serde(rename = "bitbucket")]
    GIT_REPOSITORY_TYPE_BITBUCKET,

}

impl std::fmt::Display for GitRepositoryType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::GIT_REPOSITORY_TYPE_GITHUB => write!(f, "github"),
            Self::GIT_REPOSITORY_TYPE_BITBUCKET => write!(f, "bitbucket"),
        }
    }
}

impl Default for GitRepositoryType {
    fn default() -> GitRepositoryType {
        Self::GIT_REPOSITORY_TYPE_GITHUB
    }
}

