/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DeviceStatus : The status of the device
/// The status of the device
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DeviceStatus {
    #[serde(rename = "inactive")]
    DEVICE_STATUS_INACTIVE,
    #[serde(rename = "activated")]
    DEVICE_STATUS_ACTIVATED,
    #[serde(rename = "provisioned")]
    DEVICE_STATUS_PROVISIONED,

}

impl std::fmt::Display for DeviceStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::DEVICE_STATUS_INACTIVE => write!(f, "inactive"),
            Self::DEVICE_STATUS_ACTIVATED => write!(f, "activated"),
            Self::DEVICE_STATUS_PROVISIONED => write!(f, "provisioned"),
        }
    }
}

impl Default for DeviceStatus {
    fn default() -> DeviceStatus {
        Self::DEVICE_STATUS_INACTIVE
    }
}

