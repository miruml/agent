/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ConfigInstanceValidationSource : The source of the validation results for the config instance
/// The source of the validation results for the config instance
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConfigInstanceValidationSource {
    #[serde(rename = "miru")]
    CONFIG_INSTANCE_VALIDATION_SOURCE_MIRU,
    #[serde(rename = "user")]
    CONFIG_INSTANCE_VALIDATION_SOURCE_USER,

}

impl std::fmt::Display for ConfigInstanceValidationSource {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CONFIG_INSTANCE_VALIDATION_SOURCE_MIRU => write!(f, "miru"),
            Self::CONFIG_INSTANCE_VALIDATION_SOURCE_USER => write!(f, "user"),
        }
    }
}

impl Default for ConfigInstanceValidationSource {
    fn default() -> ConfigInstanceValidationSource {
        Self::CONFIG_INSTANCE_VALIDATION_SOURCE_MIRU
    }
}

