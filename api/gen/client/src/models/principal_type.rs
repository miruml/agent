/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PrincipalType {
    #[serde(rename = "user")]
    User,
    #[serde(rename = "api_key")]
    ApiKey,
    #[serde(rename = "device")]
    Device,

}

impl std::fmt::Display for PrincipalType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::User => write!(f, "user"),
            Self::ApiKey => write!(f, "api_key"),
            Self::Device => write!(f, "device"),
        }
    }
}

impl Default for PrincipalType {
    fn default() -> PrincipalType {
        Self::User
    }
}

