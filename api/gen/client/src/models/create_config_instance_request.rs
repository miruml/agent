/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateConfigInstanceRequest {
    #[serde(rename = "filepath", deserialize_with = "Option::deserialize")]
    pub filepath: Option<String>,
    #[serde(rename = "instance")]
    pub instance: serde_json::Value,
    #[serde(rename = "device_id")]
    pub device_id: String,
    #[serde(rename = "config_schema_id")]
    pub config_schema_id: String,
}

impl CreateConfigInstanceRequest {
    pub fn new(filepath: Option<String>, instance: serde_json::Value, device_id: String, config_schema_id: String) -> CreateConfigInstanceRequest {
        CreateConfigInstanceRequest {
            filepath,
            instance,
            device_id,
            config_schema_id,
        }
    }
}

