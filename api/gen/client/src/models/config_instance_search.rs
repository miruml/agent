/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConfigInstanceSearch {
    #[serde(rename = "id")]
    CONFIG_INSTANCE_SEARCH_ID,
    #[serde(rename = "target_status")]
    CONFIG_INSTANCE_SEARCH_TARGET_STATUS,
    #[serde(rename = "activity_status")]
    CONFIG_INSTANCE_SEARCH_ACTIVITY_STATUS,
    #[serde(rename = "error_status")]
    CONFIG_INSTANCE_SEARCH_ERROR_STATUS,
    #[serde(rename = "device_id")]
    CONFIG_INSTANCE_SEARCH_DEVICE_ID,
    #[serde(rename = "config_schema_id")]
    CONFIG_INSTANCE_SEARCH_CONFIG_SCHEMA_ID,
    #[serde(rename = "config_type_id")]
    CONFIG_INSTANCE_SEARCH_CONFIG_TYPE_ID,

}

impl std::fmt::Display for ConfigInstanceSearch {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CONFIG_INSTANCE_SEARCH_ID => write!(f, "id"),
            Self::CONFIG_INSTANCE_SEARCH_TARGET_STATUS => write!(f, "target_status"),
            Self::CONFIG_INSTANCE_SEARCH_ACTIVITY_STATUS => write!(f, "activity_status"),
            Self::CONFIG_INSTANCE_SEARCH_ERROR_STATUS => write!(f, "error_status"),
            Self::CONFIG_INSTANCE_SEARCH_DEVICE_ID => write!(f, "device_id"),
            Self::CONFIG_INSTANCE_SEARCH_CONFIG_SCHEMA_ID => write!(f, "config_schema_id"),
            Self::CONFIG_INSTANCE_SEARCH_CONFIG_TYPE_ID => write!(f, "config_type_id"),
        }
    }
}

impl Default for ConfigInstanceSearch {
    fn default() -> ConfigInstanceSearch {
        Self::CONFIG_INSTANCE_SEARCH_ID
    }
}

