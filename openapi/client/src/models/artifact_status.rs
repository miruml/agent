/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ArtifactStatus {
    #[serde(rename = "queued")]
    ARTIFACT_STATUS_QUEUED,
    #[serde(rename = "verifying")]
    ARTIFACT_STATUS_VERIFYING,
    #[serde(rename = "building")]
    ARTIFACT_STATUS_BUILDING,
    #[serde(rename = "storing")]
    ARTIFACT_STATUS_STORING,
    #[serde(rename = "ready")]
    ARTIFACT_STATUS_READY,
    #[serde(rename = "failed")]
    ARTIFACT_STATUS_FAILED,

}

impl std::fmt::Display for ArtifactStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ARTIFACT_STATUS_QUEUED => write!(f, "queued"),
            Self::ARTIFACT_STATUS_VERIFYING => write!(f, "verifying"),
            Self::ARTIFACT_STATUS_BUILDING => write!(f, "building"),
            Self::ARTIFACT_STATUS_STORING => write!(f, "storing"),
            Self::ARTIFACT_STATUS_READY => write!(f, "ready"),
            Self::ARTIFACT_STATUS_FAILED => write!(f, "failed"),
        }
    }
}

impl Default for ArtifactStatus {
    fn default() -> ArtifactStatus {
        Self::ARTIFACT_STATUS_QUEUED
    }
}

