/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RenderedConfigSchema {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "rendered_config")]
    pub rendered_config: serde_json::Value,
    #[serde(rename = "is_valid")]
    pub is_valid: bool,
    #[serde(rename = "rendered_key_value_pairs")]
    pub rendered_key_value_pairs: Vec<models::RenderedConfigKeyValuePair>,
    #[serde(rename = "rendered_overrides")]
    pub rendered_overrides: Box<models::RenderedOverrideList>,
    #[serde(rename = "config_schema_id")]
    pub config_schema_id: String,
    #[serde(rename = "config_schema")]
    pub config_schema: Box<models::ConfigSchema>,
}

impl RenderedConfigSchema {
    pub fn new(object: Object, rendered_config: serde_json::Value, is_valid: bool, rendered_key_value_pairs: Vec<models::RenderedConfigKeyValuePair>, rendered_overrides: models::RenderedOverrideList, config_schema_id: String, config_schema: models::ConfigSchema) -> RenderedConfigSchema {
        RenderedConfigSchema {
            object,
            rendered_config,
            is_valid,
            rendered_key_value_pairs,
            rendered_overrides: Box::new(rendered_overrides),
            config_schema_id,
            config_schema: Box::new(config_schema),
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "rendered_config_schema")]
    RenderedConfigSchema,
}

impl Default for Object {
    fn default() -> Object {
        Self::RenderedConfigSchema
    }
}

