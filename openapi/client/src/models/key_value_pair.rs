/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct KeyValuePair {
    #[serde(rename = "config_schema_path")]
    pub config_schema_path: Vec<String>,
    #[serde(
        rename = "tag_type_field_id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub tag_type_field_id: Option<Option<String>>,
}

impl KeyValuePair {
    pub fn new(config_schema_path: Vec<String>) -> KeyValuePair {
        KeyValuePair {
            config_schema_path,
            tag_type_field_id: None,
        }
    }
}
