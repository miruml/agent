/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExternalContainerRepository {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "registry_url")]
    pub registry_url: String,
    #[serde(rename = "account_login")]
    pub account_login: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "uri")]
    pub uri: String,
    #[serde(rename = "type")]
    pub r#type: models::ContainerRepositoryType,
    #[serde(rename = "description", deserialize_with = "Option::deserialize")]
    pub description: Option<String>,
    /// The size of the repository in bytes
    #[serde(rename = "bytes", deserialize_with = "Option::deserialize")]
    pub bytes: Option<i64>,
}

impl ExternalContainerRepository {
    pub fn new(object: Object, registry_url: String, account_login: String, name: String, uri: String, r#type: models::ContainerRepositoryType, description: Option<String>, bytes: Option<i64>) -> ExternalContainerRepository {
        ExternalContainerRepository {
            object,
            registry_url,
            account_login,
            name,
            uri,
            r#type,
            description,
            bytes,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "external_container_repository")]
    ExternalContainerRepository,
}

impl Default for Object {
    fn default() -> Object {
        Self::ExternalContainerRepository
    }
}

