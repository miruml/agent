/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DeploymentActivityStatus {
    #[serde(rename = "queued")]
    DEPLOYMENT_ACTIVITY_STATUS_QUEUED,
    #[serde(rename = "downloading")]
    DEPLOYMENT_ACTIVITY_STATUS_DOWNLOADING,
    #[serde(rename = "downloaded")]
    DEPLOYMENT_ACTIVITY_STATUS_DOWNLOADED,
    #[serde(rename = "booting")]
    DEPLOYMENT_ACTIVITY_STATUS_BOOTING,
    #[serde(rename = "active")]
    DEPLOYMENT_ACTIVITY_STATUS_ACTIVE,
    #[serde(rename = "stopping")]
    DEPLOYMENT_ACTIVITY_STATUS_STOPPING,
    #[serde(rename = "stopped")]
    DEPLOYMENT_ACTIVITY_STATUS_STOPPED,
    #[serde(rename = "removing")]
    DEPLOYMENT_ACTIVITY_STATUS_REMOVING,
    #[serde(rename = "archived")]
    DEPLOYMENT_ACTIVITY_STATUS_ARCHIVED,
}

impl std::fmt::Display for DeploymentActivityStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::DEPLOYMENT_ACTIVITY_STATUS_QUEUED => write!(f, "queued"),
            Self::DEPLOYMENT_ACTIVITY_STATUS_DOWNLOADING => write!(f, "downloading"),
            Self::DEPLOYMENT_ACTIVITY_STATUS_DOWNLOADED => write!(f, "downloaded"),
            Self::DEPLOYMENT_ACTIVITY_STATUS_BOOTING => write!(f, "booting"),
            Self::DEPLOYMENT_ACTIVITY_STATUS_ACTIVE => write!(f, "active"),
            Self::DEPLOYMENT_ACTIVITY_STATUS_STOPPING => write!(f, "stopping"),
            Self::DEPLOYMENT_ACTIVITY_STATUS_STOPPED => write!(f, "stopped"),
            Self::DEPLOYMENT_ACTIVITY_STATUS_REMOVING => write!(f, "removing"),
            Self::DEPLOYMENT_ACTIVITY_STATUS_ARCHIVED => write!(f, "archived"),
        }
    }
}

impl Default for DeploymentActivityStatus {
    fn default() -> DeploymentActivityStatus {
        Self::DEPLOYMENT_ACTIVITY_STATUS_QUEUED
    }
}
