/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RenderedKeyValuePairValueSource {
    #[serde(rename = "tag")]
    RENDERED_KVP_VALUE_SOURCE_TAG,
    #[serde(rename = "tag_type_schema_default")]
    RENDERED_KVP_VALUE_SOURCE_TAG_TYPE_SCHEMA_DEFAULT,
    #[serde(rename = "config_schema_default")]
    RENDERED_KVP_VALUE_SOURCE_CONFIG_SCHEMA_DEFAULT,
}

impl std::fmt::Display for RenderedKeyValuePairValueSource {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::RENDERED_KVP_VALUE_SOURCE_TAG => write!(f, "tag"),
            Self::RENDERED_KVP_VALUE_SOURCE_TAG_TYPE_SCHEMA_DEFAULT => {
                write!(f, "tag_type_schema_default")
            }
            Self::RENDERED_KVP_VALUE_SOURCE_CONFIG_SCHEMA_DEFAULT => {
                write!(f, "config_schema_default")
            }
        }
    }
}

impl Default for RenderedKeyValuePairValueSource {
    fn default() -> RenderedKeyValuePairValueSource {
        Self::RENDERED_KVP_VALUE_SOURCE_TAG
    }
}
