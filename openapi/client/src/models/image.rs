/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Image {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "registry_url")]
    pub registry_url: String,
    #[serde(rename = "account_login")]
    pub account_login: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "uri")]
    pub uri: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "digest")]
    pub digest: String,
    #[serde(rename = "tag")]
    pub tag: String,
}

impl Image {
    pub fn new(
        object: Object,
        id: String,
        registry_url: String,
        account_login: String,
        name: String,
        uri: String,
        r#type: String,
        digest: String,
        tag: String,
    ) -> Image {
        Image {
            object,
            id,
            registry_url,
            account_login,
            name,
            uri,
            r#type,
            digest,
            tag,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "image")]
    Image,
}

impl Default for Object {
    fn default() -> Object {
        Self::Image
    }
}
