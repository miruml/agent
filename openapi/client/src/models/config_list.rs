/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConfigList {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "total_count")]
    pub total_count: i64,
    #[serde(rename = "limit")]
    pub limit: i32,
    #[serde(rename = "offset")]
    pub offset: i32,
    #[serde(rename = "next", deserialize_with = "Option::deserialize")]
    pub next: Option<String>,
    #[serde(rename = "previous", deserialize_with = "Option::deserialize")]
    pub previous: Option<String>,
    #[serde(rename = "has_more")]
    pub has_more: bool,
    #[serde(rename = "data")]
    pub data: Vec<models::Config>,
}

impl ConfigList {
    pub fn new(
        object: Object,
        total_count: i64,
        limit: i32,
        offset: i32,
        next: Option<String>,
        previous: Option<String>,
        has_more: bool,
        data: Vec<models::Config>,
    ) -> ConfigList {
        ConfigList {
            object,
            total_count,
            limit,
            offset,
            next,
            previous,
            has_more,
            data,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "list")]
    List,
}

impl Default for Object {
    fn default() -> Object {
        Self::List
    }
}
