/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum JobPurpose {
    #[serde(rename = "one-time")]
    JOB_PURPOSE_ONE_TIME,
    #[serde(rename = "pre-deploy")]
    JOB_PURPOSE_PRE_DEPLOY,
    #[serde(rename = "post-deploy")]
    JOB_PURPOSE_POST_DEPLOY,

}

impl std::fmt::Display for JobPurpose {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::JOB_PURPOSE_ONE_TIME => write!(f, "one-time"),
            Self::JOB_PURPOSE_PRE_DEPLOY => write!(f, "pre-deploy"),
            Self::JOB_PURPOSE_POST_DEPLOY => write!(f, "post-deploy"),
        }
    }
}

impl Default for JobPurpose {
    fn default() -> JobPurpose {
        Self::JOB_PURPOSE_ONE_TIME
    }
}

