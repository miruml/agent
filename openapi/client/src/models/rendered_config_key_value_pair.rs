/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RenderedConfigKeyValuePair {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "result")]
    pub result: Box<models::RenderedKeyValuePair>,
    #[serde(rename = "render_walk")]
    pub render_walk: Vec<models::RenderWalkStep>,
}

impl RenderedConfigKeyValuePair {
    pub fn new(
        object: Object,
        result: models::RenderedKeyValuePair,
        render_walk: Vec<models::RenderWalkStep>,
    ) -> RenderedConfigKeyValuePair {
        RenderedConfigKeyValuePair {
            object,
            result: Box::new(result),
            render_walk,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "rendered_config_key_value_pair")]
    RenderedConfigKeyValuePair,
}

impl Default for Object {
    fn default() -> Object {
        Self::RenderedConfigKeyValuePair
    }
}
