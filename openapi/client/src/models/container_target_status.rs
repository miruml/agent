/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContainerTargetStatus {
    #[serde(rename = "none")]
    CONTAINER_TARGET_STATUS_NONE,
    #[serde(rename = "running")]
    CONTAINER_TARGET_STATUS_RUNNING,
    #[serde(rename = "stopped")]
    CONTAINER_TARGET_STATUS_STOPPED,
    #[serde(rename = "restarted")]
    CONTAINER_TARGET_STATUS_RESTARTED,
    #[serde(rename = "removed")]
    CONTAINER_TARGET_STATUS_REMOVED,

}

impl std::fmt::Display for ContainerTargetStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CONTAINER_TARGET_STATUS_NONE => write!(f, "none"),
            Self::CONTAINER_TARGET_STATUS_RUNNING => write!(f, "running"),
            Self::CONTAINER_TARGET_STATUS_STOPPED => write!(f, "stopped"),
            Self::CONTAINER_TARGET_STATUS_RESTARTED => write!(f, "restarted"),
            Self::CONTAINER_TARGET_STATUS_REMOVED => write!(f, "removed"),
        }
    }
}

impl Default for ContainerTargetStatus {
    fn default() -> ContainerTargetStatus {
        Self::CONTAINER_TARGET_STATUS_NONE
    }
}

