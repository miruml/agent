/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExternalContainerImage {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "digest")]
    pub digest: String,
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
    #[serde(rename = "uri")]
    pub uri: String,
    #[serde(rename = "bytes")]
    pub bytes: i64,
    #[serde(rename = "uploaded_at")]
    pub uploaded_at: String,
}

impl ExternalContainerImage {
    pub fn new(
        object: Object,
        digest: String,
        tags: Vec<String>,
        uri: String,
        bytes: i64,
        uploaded_at: String,
    ) -> ExternalContainerImage {
        ExternalContainerImage {
            object,
            digest,
            tags,
            uri,
            bytes,
            uploaded_at,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "external_image")]
    ExternalImage,
}

impl Default for Object {
    fn default() -> Object {
        Self::ExternalImage
    }
}
