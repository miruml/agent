/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConcreteConfigSearch {
    #[serde(rename = "client_id")]
    CONCRETE_CONFIG_SEARCH_CLIENT_ID,
    #[serde(rename = "config_schema_id")]
    CONCRETE_CONFIG_SEARCH_CONFIG_SCHEMA_ID,
    #[serde(rename = "concrete_config")]
    CONCRETE_CONFIG_SEARCH_CONCRETE_CONFIG,

}

impl std::fmt::Display for ConcreteConfigSearch {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::CONCRETE_CONFIG_SEARCH_CLIENT_ID => write!(f, "client_id"),
            Self::CONCRETE_CONFIG_SEARCH_CONFIG_SCHEMA_ID => write!(f, "config_schema_id"),
            Self::CONCRETE_CONFIG_SEARCH_CONCRETE_CONFIG => write!(f, "concrete_config"),
        }
    }
}

impl Default for ConcreteConfigSearch {
    fn default() -> ConcreteConfigSearch {
        Self::CONCRETE_CONFIG_SEARCH_CLIENT_ID
    }
}

