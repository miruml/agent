/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RepositoryNotFound {
    #[serde(rename = "code")]
    pub code: String,
    #[serde(rename = "params")]
    pub params: Box<models::RepositoryNotFoundParams>,
    #[serde(rename = "message")]
    pub message: String,
}

impl RepositoryNotFound {
    pub fn new(code: String, params: models::RepositoryNotFoundParams, message: String) -> RepositoryNotFound {
        RepositoryNotFound {
            code,
            params: Box::new(params),
            message,
        }
    }
}

