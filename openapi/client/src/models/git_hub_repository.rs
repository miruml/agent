/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GitHubRepository {
    #[serde(rename = "id")]
    pub id: i64,
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "full_name")]
    pub full_name: String,
    #[serde(rename = "html_url")]
    pub html_url: String,
}

impl GitHubRepository {
    pub fn new(
        id: i64,
        object: Object,
        name: String,
        full_name: String,
        html_url: String,
    ) -> GitHubRepository {
        GitHubRepository {
            id,
            object,
            name,
            full_name,
            html_url,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "github_repository")]
    GithubRepository,
}

impl Default for Object {
    fn default() -> Object {
        Self::GithubRepository
    }
}
