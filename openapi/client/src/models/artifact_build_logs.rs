/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ArtifactBuildLogs {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "docker_build_logs")]
    pub docker_build_logs: Vec<models::DockerBuildLog>,
    #[serde(rename = "miru_build_logs")]
    pub miru_build_logs: Vec<models::LogEntry>,
}

impl ArtifactBuildLogs {
    pub fn new(
        object: Object,
        docker_build_logs: Vec<models::DockerBuildLog>,
        miru_build_logs: Vec<models::LogEntry>,
    ) -> ArtifactBuildLogs {
        ArtifactBuildLogs {
            object,
            docker_build_logs,
            miru_build_logs,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "artifact_build_logs")]
    ArtifactBuildLogs,
}

impl Default for Object {
    fn default() -> Object {
        Self::ArtifactBuildLogs
    }
}
