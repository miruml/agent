/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TagSearch {
    #[serde(rename = "client")]
    TAG_SEARCH_CLIENT,
    #[serde(rename = "name")]
    TAG_SEARCH_NAME,
    #[serde(rename = "tag_type")]
    TAG_SEARCH_TAG_TYPE,

}

impl std::fmt::Display for TagSearch {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::TAG_SEARCH_CLIENT => write!(f, "client"),
            Self::TAG_SEARCH_NAME => write!(f, "name"),
            Self::TAG_SEARCH_TAG_TYPE => write!(f, "tag_type"),
        }
    }
}

impl Default for TagSearch {
    fn default() -> TagSearch {
        Self::TAG_SEARCH_CLIENT
    }
}

