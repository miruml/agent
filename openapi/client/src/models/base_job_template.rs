/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BaseJobTemplate {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "is_favorite")]
    pub is_favorite: bool,
    #[serde(rename = "created_by", deserialize_with = "Option::deserialize")]
    pub created_by: Option<Box<models::User>>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "updated_by", deserialize_with = "Option::deserialize")]
    pub updated_by: Option<Box<models::User>>,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "workspace_id")]
    pub workspace_id: String,
}

impl BaseJobTemplate {
    pub fn new(object: Object, id: String, name: String, is_favorite: bool, created_by: Option<models::User>, created_at: String, updated_by: Option<models::User>, updated_at: String, workspace_id: String) -> BaseJobTemplate {
        BaseJobTemplate {
            object,
            id,
            name,
            is_favorite,
            created_by: if let Some(x) = created_by {Some(Box::new(x))} else {None},
            created_at,
            updated_by: if let Some(x) = updated_by {Some(Box::new(x))} else {None},
            updated_at,
            workspace_id,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "job_template")]
    JobTemplate,
}

impl Default for Object {
    fn default() -> Object {
        Self::JobTemplate
    }
}

