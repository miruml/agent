/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BaseJob {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "type")]
    pub r#type: models::JobPurpose,
    #[serde(rename = "job_template_id", deserialize_with = "Option::deserialize")]
    pub job_template_id: Option<String>,
    #[serde(rename = "runs")]
    pub runs: Box<models::BaseJobRunList>,
    #[serde(rename = "created_by", deserialize_with = "Option::deserialize")]
    pub created_by: Option<Box<models::User>>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "workspace_id")]
    pub workspace_id: String,
}

impl BaseJob {
    pub fn new(
        object: Object,
        id: String,
        name: String,
        r#type: models::JobPurpose,
        job_template_id: Option<String>,
        runs: models::BaseJobRunList,
        created_by: Option<models::User>,
        created_at: String,
        workspace_id: String,
    ) -> BaseJob {
        BaseJob {
            object,
            id,
            name,
            r#type,
            job_template_id,
            runs: Box::new(runs),
            created_by: created_by.map(Box::new),
            created_at,
            workspace_id,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "job")]
    Job,
}

impl Default for Object {
    fn default() -> Object {
        Self::Job
    }
}
