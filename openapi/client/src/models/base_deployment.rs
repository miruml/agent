/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BaseDeployment {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "device_id")]
    pub device_id: String,
    #[serde(rename = "status")]
    pub status: models::DeploymentStatus,
    #[serde(rename = "activity_status")]
    pub activity_status: models::DeploymentActivityStatus,
    #[serde(rename = "error_status")]
    pub error_status: models::DeploymentErrorStatus,
    #[serde(rename = "target_status")]
    pub target_status: models::DeploymentTargetStatus,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "downloading_at", deserialize_with = "Option::deserialize")]
    pub downloading_at: Option<String>,
    #[serde(rename = "downloaded_at", deserialize_with = "Option::deserialize")]
    pub downloaded_at: Option<String>,
    #[serde(rename = "booting_at", deserialize_with = "Option::deserialize")]
    pub booting_at: Option<String>,
    #[serde(rename = "active_at", deserialize_with = "Option::deserialize")]
    pub active_at: Option<String>,
    #[serde(rename = "stopping_at", deserialize_with = "Option::deserialize")]
    pub stopping_at: Option<String>,
    #[serde(rename = "stopped_at", deserialize_with = "Option::deserialize")]
    pub stopped_at: Option<String>,
    #[serde(rename = "removing_at", deserialize_with = "Option::deserialize")]
    pub removing_at: Option<String>,
    #[serde(rename = "archived_at", deserialize_with = "Option::deserialize")]
    pub archived_at: Option<String>,
    #[serde(rename = "cooldown_ends_at")]
    pub cooldown_ends_at: String,
}

impl BaseDeployment {
    pub fn new(
        object: Object,
        id: String,
        device_id: String,
        status: models::DeploymentStatus,
        activity_status: models::DeploymentActivityStatus,
        error_status: models::DeploymentErrorStatus,
        target_status: models::DeploymentTargetStatus,
        created_at: String,
        downloading_at: Option<String>,
        downloaded_at: Option<String>,
        booting_at: Option<String>,
        active_at: Option<String>,
        stopping_at: Option<String>,
        stopped_at: Option<String>,
        removing_at: Option<String>,
        archived_at: Option<String>,
        cooldown_ends_at: String,
    ) -> BaseDeployment {
        BaseDeployment {
            object,
            id,
            device_id,
            status,
            activity_status,
            error_status,
            target_status,
            created_at,
            downloading_at,
            downloaded_at,
            booting_at,
            active_at,
            stopping_at,
            stopped_at,
            removing_at,
            archived_at,
            cooldown_ends_at,
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "deployment")]
    Deployment,
}

impl Default for Object {
    fn default() -> Object {
        Self::Deployment
    }
}
