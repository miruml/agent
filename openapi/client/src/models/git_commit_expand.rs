/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum GitCommitExpand {
    #[serde(rename = "created_by")]
    GIT_COMMIT_EXPAND_CREATED_BY,
    #[serde(rename = "config_schema_git_commits")]
    GIT_COMMIT_EXPAND_CONFIG_SCHEMA_GIT_COMMITS,

}

impl std::fmt::Display for GitCommitExpand {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::GIT_COMMIT_EXPAND_CREATED_BY => write!(f, "created_by"),
            Self::GIT_COMMIT_EXPAND_CONFIG_SCHEMA_GIT_COMMITS => write!(f, "config_schema_git_commits"),
        }
    }
}

impl Default for GitCommitExpand {
    fn default() -> GitCommitExpand {
        Self::GIT_COMMIT_EXPAND_CREATED_BY
    }
}

