/*
 * Miru API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Group {
    #[serde(rename = "object")]
    pub object: Object,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "workspace_id", skip_serializing_if = "Option::is_none")]
    pub workspace_id: Option<String>,
    #[serde(rename = "devices")]
    pub devices: Box<models::GroupDeviceList>,
    #[serde(rename = "github_sources")]
    pub github_sources: Box<models::GitHubSourceList>,
}

impl Group {
    pub fn new(
        object: Object,
        id: String,
        name: String,
        devices: models::GroupDeviceList,
        github_sources: models::GitHubSourceList,
    ) -> Group {
        Group {
            object,
            id,
            name,
            workspace_id: None,
            devices: Box::new(devices),
            github_sources: Box::new(github_sources),
        }
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Object {
    #[serde(rename = "group")]
    Group,
}

impl Default for Object {
    fn default() -> Object {
        Self::Group
    }
}
